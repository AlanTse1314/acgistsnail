name: package

on:
  push:
    tags: [ "*" ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}版本
        draft: false
        prerelease: false
        body: |
          [最新版本下载](https://gitee.com/acgist/snail/attach_files)
  build:
    name: Build
    needs: release
    strategy:
      matrix:
        runs-on: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: Mac Setting
      if: matrix.runs-on == 'macos-latest'
      run: |
        # pkg|dmg
        echo "suffix=pkg" >> $GITHUB_ENV
        echo "system=mac" >> $GITHUB_ENV
        echo "args=" >> $GITHUB_ENV
    - name: Linux Setting
      if: matrix.runs-on == 'ubuntu-latest'
      run: |
        # rpm|deb
        echo "suffix=rpm" >> $GITHUB_ENV
        echo "system=linux" >> $GITHUB_ENV
        echo "args=--linux-shortcut" >> $GITHUB_ENV
    - name: Windows Setting
      if: matrix.runs-on == 'windows-latest'
      run: |
        $version="${{ github.ref }}".substring("refs/tags/".length)
        # msi|exe
        echo "suffix=msi" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "system=win" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "version=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "args=--win-shortcut --win-dir-chooser" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Set Version
      run: echo "version=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 16
    - name: Build with Maven
      run: mvn clean package -P release -D gpg.skip=true -D maven.test.skip=true -B -V --file pom.xml
    - name: Package Snail
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p ./build/snail/
        cp -v -r ./LICENSE ./build/
        cp -v -r ./docs/logo.ico ./build/
        cp -v -r ./snail-javafx/target/lib ./build/snail/
        cp -v -r ./snail-javafx/target/snail.javafx-*.jar ./build/snail/
        tar -cvf snail-${{ env.system }}-${{ env.version }}-without-jre.tar -C ./build/ snail
        jlink --add-modules java.base,java.xml,java.desktop,java.scripting,jdk.unsupported --output ./build/runtime
        jpackage \
          --name snail \
          --type ${{ env.suffix }}
          --app-version ${{ env.version }} \
          --vendor acgist \
          --copyright acgist \
          --description "acgist snail" \
          --input ./build/snail/ \
          --main-jar snail.javafx-${{ env.version }}.jar \
          --runtime-image ./build/runtime \
          --icon ./build/logo.ico \
          --license-file ./build/LICENSE \
          --java-options "-server -Xms128m -Xmx256m -XX:NewRatio=2 -XX:SurvivorRatio=2 -Dfile.encoding=UTF-8" \
          --dest ./build/ \
          $args
        # upload-release-asset不能一次上传多个文件使用hub命令上传
        hub release edit -a ./snail-${{ env.system }}-${{ env.version }}-without-jre.tar -m "" ${{ env.version }}
        hub release edit -a ./snail-${{ env.system }}-${{ env.version }}.${{ env.suffix }} -m "" ${{ env.version }}