name: package

on:
  push:
    tags: [ "*" ]
  push:
    branches: [ dev ]

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: Mac Setting
      if: ${{ matrix.runs-on }} == "macos-latest"
      env:
        os: mac
      run: echo ${{ os }}
    - name: Linux Setting
      if: ${{ matrix.runs-on }} == "ubuntu-latest"
      env:
        os: linux
      run: echo ${{ os }}
    - name: Windows Setting
      if: ${{ matrix.runs-on }} == "windows-latest"
      env:
        os: win
      run: echo ${{ os }}
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn clean package -P release -D gpg.skip=true -D maven.test.skip=true -B -V --file pom.xml
    - name: Package Snail
      run: |
        echo ${{ os }}
        mkdir -p ./build/snail/
        cp -v -r ./LICENSE ./build/
        cp -v -r ./docs/logo.ico ./build/
        cp -v -r ./snail-javafx/target/lib ./build/snail/
        cp -v -r ./snail-javafx/target/snail.javafx-*.jar ./build/snail/
        tar -cvf snail-${{ matrix.runs-on }}-without-jre.tar -C ./build/ snail
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: snail
        path: |
          snail-*.msi
          snail-*.exe
          snail-*.pkg
          snail-*.dmg
          snail-*.rpm
          snail-*.deb
          snail-*.tar
