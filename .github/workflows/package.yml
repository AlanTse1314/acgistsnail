name: package

on:
  push:
    tags: [ "*" ]

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: Mac Setting
      if: matrix.runs-on == 'macos-latest'
      run: echo "system=mac" >> $GITHUB_ENV
    - name: Linux Setting
      if: matrix.runs-on == 'ubuntu-latest'
      run: echo "system=linux" >> $GITHUB_ENV
    - name: Windows Setting
      if: matrix.runs-on == 'windows-latest'
      run: |
        $version="${{ github.ref }}".substring("refs/tags/".length)
        echo "system=win" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "version=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Set Version
      run: echo "version=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn clean package -P release -D gpg.skip=true -D maven.test.skip=true -B -V --file pom.xml
    - name: Package Snail
      run: |
        mkdir -p ./build/snail/
        cp -v -r ./LICENSE ./build/
        cp -v -r ./docs/logo.ico ./build/
        cp -v -r ./snail-javafx/target/lib ./build/snail/
        cp -v -r ./snail-javafx/target/snail.javafx-*.jar ./build/snail/
        tar -cvf snail-${{ env.system }}-${{ env.version }}-without-jre.tar -C ./build/ snail
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: snail
        path: |
          snail-*.msi
          snail-*.exe
          snail-*.pkg
          snail-*.dmg
          snail-*.rpm
          snail-*.deb
          snail-*.tar
